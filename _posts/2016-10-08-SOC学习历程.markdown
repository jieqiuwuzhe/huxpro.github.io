---
layout:     post
title:      "基于ZYNQ的光流法协同处理"
subtitle:   " \"FPGA + ARM 的光流法介绍 \""
date:       2016-10-08 21:57:00
author:     "Root"
header-img: "img/post-bg-e2e-ux.jpg"
catalog: true
tags:
    - UAV
---

> “每一张牌，都是对你的思念。我赌赢了所有，却赢不回你的爱。————卡牌大师 ”

## HS稠密光流法工作流程

![Markdown](http://p1.bpimg.com/572619/0944777c86e17f77.png)

#### 预处理（S1）

平滑处理图像，用来减少图像噪声及外部影响，一般通过卷积实现。

#### 梯度计算（S2）

在平滑处理后的图像基础上进行图像梯度计算，包括水平梯度 Ex 、垂直梯度 Ey、时间梯度 Et 。HS模型只需要一阶梯度，梯度计算也通过卷积实现。

#### 运动模型构造（S3）

根据图读信息构造运动模型的信息。HS稠密光流模型需要5个运动模型信息（J11、J12、J13、J22、J23），这一阶段操作是**矩阵相乘**。

#### 迭代阶段（S4）

通过全局迭代计算光流。对于HS稠密光流，只需更新光流模型（u，v）。迭代体的计算是根据线性的超松弛算法（SOR），其中，i代表像素点行坐标，j代表像素点列坐标，J代表S3里构造的运动模型，u和v表示水平和垂直的光流模型。N-(i)代表第i个像素点的上和左相邻的像素点，N+(i)代表第i个像素点的下和右相邻的像素点。w是超松弛迭代的权重因子，k是迭代次数，a是光流平滑的权值。

![Markdown](http://p1.bqimg.com/572619/cc7961d4b6b6a472.png)

## 并行性分析

#### 任务并行

![Markdown](http://p1.bqimg.com/572619/b002e82cc83a1f2b.png)

每个阶段的操作都存在数据相关性，即不同阶段间需要串行。但是在同一阶段内，许多操作可以自己独立计算。如：S1阶段同时平滑处理图片序列（img1、img2），可以同时得到平滑后的图片（simg1、simg2）。然后根据平滑后图片的平均值（（simg1+simg2）/2），可以计算 Ex 和 Ey，同时 Et 是两张图片相减所得。同样的，S3 阶段可以同时获得5个运动模型信息。这些操作都可以独立以及同时计算。

#### 数据并行

S1 和 S2 阶段的操作均可以通过卷积来实现，而卷积是一个典型的数据并行，利用FPGA部分的 **FFT** IP核可以快速计算卷积。

#### 流水并行

迭代计算需要迭代次数去获取结果，这就导致了整个系统流水性能的下降。

（这里没完事儿！！ 暂未搞懂，先放这儿。。。。。。）

## HS稠密光流法在ZYNQ上的设计

使用Xilinx的高层综合语言HLS实现上述的光流计算过程，生成ZYNQ的光流计算IP核，如图：

![Markdown](http://p1.bpimg.com/572619/f49b3eb3be7e01dd.png)

PL端的管理IP核与DDR的通信方式是基于ARM的AXI4总线，PL端的数据通路是由 VDMA 来读写外部存储器的数据，PS端通过通用IO接口（GPIO）主动控制PL端的控制通路。为了完成外部迭代计算，使用两个光流的IP核流水的并行计算。 IP核 Core0 通过 VDMA0 读取数据区A，经过IP核的硬件延迟，处理完成的结果再由 VDMA0 写入数据区B。同时 Core1 通过 VDMA1 读取数据区 B ，经过PL，处理完成的结果通过 VDMA1 写入数据区 A，形成一个高效的迭代环。



—— Root 于 2016.10


